<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1434393506739">{:repl-history {:ide [], :local [&quot;(println \&quot;test\&quot;)&quot; &quot;(configure-project)&quot; &quot;(require 'weasel.repl.websocket)\n\n(cemerick.piggieback/cljs-repl\n  :repl-env (weasel.repl.websocket/repl-env\n              :ip \&quot;0.0.0.0\&quot; :port 9001))&quot; &quot;(ws-repl/connect \&quot;ws://localhost:9001\&quot; :verbose true)&quot; &quot;(print \&quot;test\&quot;)&quot; &quot;(+ 1 2)&quot; &quot;(defn freemarker-template-with-params [template params]\n  (let [writer (StringWriter.), t (load-freemarker-template template)]\n    (do\n      (.process t params writer)\n      (.toString writer)\n      )))&quot; &quot;(defn load-freemarker-template [template]\n  (Template. \&quot;name\&quot; (StringReader. (get-template-data template)) freemarker-configuration))&quot; &quot;(defn configure-project []\n  (do \n    (print \&quot;Project name? [default: my project] \&quot;)\n    (let [project-name (read-line)]\n      (print \&quot;Project Id? [default: my.project.id] \&quot;)\n      (let [project-id (read-line)]\n        (print \&quot;Project version? [default: 0.0.1] \&quot;)\n        (let [project-version (read-line)]\n          (let\n              [t (freemarker-template-with-params\n                  \&quot;minimal-project\&quot;\n                  {\n                   \&quot;project_name\&quot; project-name\n                   \&quot;project_id\&quot;   project-id\n                   \&quot;project_version\&quot; project-version\n                   })\n               ]\n            println t))))))&quot; &quot;(map (fn [x] (* x x)) (range 1 3))&quot; &quot;(defn get-prompt-info [prompt]\n  (let [prompts (get-prompts prompt)]\n    (map (fn [x] (do\n                   (print x)\n                   (read-line)\n                   )) prompts)))&quot; &quot;(let [[project-name project-id project-version] (vec (get-prompt-info :configure-project))] (project-name))&quot; &quot;(System/getProperty \&quot;os.name\&quot;)&quot;], :remote []}}</component>
</project>